services:
  zentry.api:
    image: zentry.api
    build:
      context: .
      dockerfile: src/Zentry.API/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_URLS=https://+:5000
      - Redis__ConnectionString=redis:6379
      - MongoDB__ConnectionString=mongodb://mongodb:27017
      - Postgres__ConnectionString=Host=postgres;Database=zentry;Username=admin;Password=pass
      - RabbitMQ__Host=rabbitmq
    depends_on:
      - redis
      - mongodb
      - postgres
      - rabbitmq
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health" ]
      interval: 30s
      timeout: 3s
      retries: 3
  zentry.background:
    image: zentry.background
    build:
      context: .
      dockerfile: src/Zentry.BackgroundProcessor/Dockerfile
    environment:
      - RabbitMQ__Host=rabbitmq
    depends_on:
      - rabbitmq
    healthcheck:
      test: [ "CMD-SHELL", "python -c 'import pika' || exit 1" ]
      interval: 30s
      timeout: 3s
      retries: 3

  zentry.python-worker:
    image: zentry.python-worker
    build:
      context: src/Zentry.BackgroundProcessor
      dockerfile: Dockerfile.python
    environment:
      - RabbitMQ__Host=rabbitmq
    depends_on:
      - rabbitmq
    healthcheck:
      test: [ "CMD-SHELL", "python -c 'import pika' || exit 1" ]
      interval: 30s
      timeout: 3s
      retries: 3

  redis:
    image: redis:8-alpine
    command: redis-server --maxmemory 500mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 3
  mongodb:
    image: mongo
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=zentry
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })" ]
      interval: 10s
      timeout: 3s
      retries: 3

  postgres:
    image: postgres
    environment:
      - POSTGRES_DB=zentry
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=pass
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "admin", "-d", "zentry" ]
      interval: 10s
      timeout: 3s
      retries: 3

  rabbitmq:
    image: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 3s
      retries: 3
volumes:
  redis-data:
  mongodb-data:
  postgres-data:
